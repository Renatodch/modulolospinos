generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model activity {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(64)
  description String    @db.VarChar(255)
  type        Int
  date_max    DateTime? @db.Timestamp(6)
  url         String?   @db.VarChar(255)
  rubric      String[]  @db.VarChar
  id_subject  Int?
  subject     subject?  @relation(fields: [id_subject], references: [id], onDelete: NoAction, onUpdate: NoAction)
  task        task[]
}

model task {
  id          Int       @id @default(autoincrement())
  title       String?   @db.VarChar(64)
  description String?   @db.VarChar(255)
  image1      String?   @db.VarChar(255)
  date_upload DateTime  @db.Timestamp(6)
  score       Int?
  scores      String[]  @db.VarChar
  comment     String?   @db.VarChar(255)
  type        Int
  id_activity Int?
  id_user     Int?
  activity    activity? @relation(fields: [id_activity], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user?     @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          Int           @id @default(autoincrement())
  password    String        @db.VarChar(50)
  type        Int
  email       String        @unique @db.VarChar(255)
  name        String        @db.VarChar(50)
  score       score[]
  task        task[]
  user_course user_course[]
}

model user_course {
  id          Int       @id @default(autoincrement())
  date_start  DateTime? @db.Timestamp(6)
  date_end    DateTime? @db.Timestamp(6)
  date_update DateTime? @db.Timestamp(6)
  state       Int
  average     Int?
  progress    Int
  id_user     Int?
  user        user?     @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model subject {
  id          Int        @id @default(autoincrement())
  title       String     @db.VarChar(64)
  description String?    @db.VarChar(255)
  activity    activity[]
}

model score {
  id       Int     @id @default(autoincrement())
  activity String? @db.VarChar(64)
  subject  String  @db.VarChar(64)
  value    Int
  order    Int
  id_user  Int?
  user     user?   @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
